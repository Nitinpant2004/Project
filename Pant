import time
import random
import tkinter as tk
from tkinter import messagebox

# Sentences for the typing test
sentences = [
    "The quick brown fox jumps over the lazy dog.",
    "Typing speed is a measure of productivity.",
    "Python is an amazing programming language.",
    "Practice makes a person perfect in typing.",
    "Never stop learning new skills and improving."
]

class TypingSpeedTest:
    def __init__(self, root):
        self.root = root
        self.root.title("Typing Speed Test")
        self.root.geometry("600x400")
        self.root.resizable(False, False)

        # Variables
        self.start_time = None
        self.selected_sentence = random.choice(sentences)
        self.user_input = tk.StringVar()

        # UI Elements
        self.create_widgets()

    def create_widgets(self):
        """Create UI elements."""
        # Instructions
        tk.Label(self.root, text="Typing Speed Test", font=("Helvetica", 20), fg="blue").pack(pady=10)
        tk.Label(self.root, text="Type the following sentence as quickly and accurately as you can:", wraplength=550).pack()

        # Sentence to type
        self.sentence_label = tk.Label(self.root, text=self.selected_sentence, font=("Helvetica", 14), wraplength=550)
        self.sentence_label.pack(pady=10)

        # Input box
        self.input_entry = tk.Entry(self.root, textvariable=self.user_input, font=("Helvetica", 14), width=50)
        self.input_entry.pack(pady=10)
        self.input_entry.bind("<FocusIn>", self.start_timer)

        # Submit button
        tk.Button(self.root, text="Submit", command=self.calculate_results, font=("Helvetica", 12), bg="green", fg="white").pack(pady=10)

    def start_timer(self, event):
        """Start the timer when the user starts typing."""
        if not self.start_time:
            self.start_time = time.time()

    def calculate_results(self):
        """Calculate typing speed and accuracy, and display results."""
        end_time = time.time()
        time_taken = end_time - self.start_time if self.start_time else 0
        words_typed = len(self.user_input.get().split())
        typing_speed = (words_typed / time_taken) * 60 if time_taken > 0 else 0
        accuracy = sum(1 for a, b in zip(self.selected_sentence, self.user_input.get()) if a == b) / len(self.selected_sentence) * 100 if self.selected_sentence else 0

        # Show results in a new window
        self.show_results(typing_speed, accuracy, time_taken)

    def show_results(self, speed, accuracy, time_taken):
        """Display results in a new window."""
        result_window = tk.Toplevel(self.root)
        result_window.title("Results")
        result_window.geometry("400x300")

        tk.Label(result_window, text="Typing Speed Test Results", font=("Helvetica", 16), fg="blue").pack(pady=10)
        tk.Label(result_window, text=f"Time Taken: {time_taken:.2f} seconds", font=("Helvetica", 12)).pack(pady=5)
        tk.Label(result_window, text=f"Typing Speed: {speed:.2f} WPM", font=("Helvetica", 12)).pack(pady=5)
        tk.Label(result_window, text=f"Accuracy: {accuracy:.2f}%", font=("Helvetica", 12)).pack(pady=5)

        # Close button
        tk.Button(result_window, text="Close", command=result_window.destroy, bg="red", fg="white", font=("Helvetica", 12)).pack(pady=20)

        # Reset for the next test
        self.reset_test()

    def reset_test(self):
        """Reset the test for another attempt."""
        self.start_time = None
        self.selected_sentence = random.choice(sentences)
        self.sentence_label.config(text=self.selected_sentence)
        self.user_input.set("")

# Run the app
if __name__ == "__main__":
    root = tk.Tk()
    app = TypingSpeedTest(root)
    root.mainloop()
